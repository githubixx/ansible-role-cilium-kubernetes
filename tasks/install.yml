---
- name: Create namespace
  kubernetes.core.k8s:
    name: "{{ cilium_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  delegate_to: "{{ cilium_delegate_to }}"
  run_once: true

- name: Include Helm repository tasks
  ansible.builtin.include_tasks:
    file: helm_repository.yml

- name: BPFFS handling for Ubuntu 18.04
  when:
    - ansible_lsb.release is defined
    - ansible_lsb.release is version('20.04', '<')
  block:
    - name: Install systemd unit file for mounting BPFFS
      ansible.builtin.copy:
        src: "files/etc/systemd/system/sys-fs-bpf.mount"
        dest: "/etc/systemd/system/sys-fs-bpf.mount"
        mode: 0644
        owner: root
        group: root
      notify:
        - Reload systemd

    - name: Enable and mount BPFFSS
      ansible.builtin.service:
        name: sys-fs-bpf.mount
        enabled: true
        state: started

- name: Install Cilium etcd secrets in k8s
  when:
    - cilium_etcd_enabled is defined
    - cilium_etcd_enabled == "true"
    - cilium_etcd_secrets_name is defined
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'etcd-secrets.yml.j2') }}"
    namespace: "{{ cilium_namespace }}"
  delegate_to: "{{ cilium_delegate_to }}"
  run_once: true

- name: Install Cilium via Helm
  block:
    - name: Create temporary file for Helm values
      ansible.builtin.tempfile:
        state: file
        suffix: cilium_values
      delegate_to: "{{ cilium_delegate_to }}"
      run_once: true
      register: cilium__values_tmp_file

    - name: Select values file for Helm template
      ansible.builtin.template:
        src: "{{ lookup('first_found', params) }}"
        dest: "{{ cilium__values_tmp_file.path }}"
        mode: 0600
      delegate_to: "{{ cilium_delegate_to }}"
      run_once: true
      vars:
        params:
          files:
            - values.yml.j2
            - values.yaml.j2
            - cilium_values_user.yml.j2
            - cilium_values_default.yml.j2
          paths:
            - "{{ cilium_chart_values_directory }}"
            - templates

    - name: Install chart
      kubernetes.core.helm:
        name: "{{ cilium_release_name }}"
        chart_ref: "{{ cilium_chart_name }}"
        chart_version: "{{ cilium_chart_version }}"
        release_namespace: "{{ cilium_namespace }}"
        create_namespace: false
        update_repo_cache: true
        values_files:
          - "{{ cilium__values_tmp_file.path }}"
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"
      register: cilium__helm_install_chart

    - name: Install chart (helm command executed)
      when:
        - cilium__helm_install_chart is defined
        - cilium__helm_install_chart.command is defined
        - cilium_helm_show_commands
      ansible.builtin.debug:
        var: cilium__helm_install_chart.command
      delegate_to: "{{ cilium_delegate_to }}"
      run_once: true

    - name: Delete temporary file for Helm values
      when: cilium__values_tmp_file.path is defined
      ansible.builtin.file:
        path: "{{ cilium__values_tmp_file.path }}"
        state: absent
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"

  rescue:
    - name: Delete temporary file for Helm values
      when: cilium__values_tmp_file.path is defined
      ansible.builtin.file:
        path: "{{ cilium__values_tmp_file.path }}"
        state: absent
      run_once: true
      delegate_to: "{{ cilium_delegate_to }}"
