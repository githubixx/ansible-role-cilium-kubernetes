---
- name: Ensure Cilium etcd secrets in k8s
  k8s:
    state: present
    definition: "{{ lookup('template', 'etcd-secrets.yml.j2') }}"
    namespace: "{{ cilium_namespace }}"
  delegate_to: 127.0.0.1
  run_once: true
  when: cilium_etcd_secrets_name is defined

- name: Update Helm repo
  shell:  # noqa 301
    set -o errexit
    set -o pipefail
    set -o nounset

    helm repo update

    exit 0
  run_once: true
  delegate_to: 127.0.0.1
  args:
    executable: "/bin/bash"

- name: Fetch current Cilium DaemonSet information
  k8s_info:
    api_version: v1
    kind: DaemonSet
    name: "{{ cilium_release_name }}"
    namespace: "{{ cilium_namespace }}"
  register: cilium_daemonset
  run_once: true
  delegate_to: 127.0.0.1

- name: Register current Cilium pods running
  set_fact:
    cilium_pods_running="{{ cilium_daemonset | json_query(query) }}"
  vars:
    query: "resources[0].status.numberReady"
  run_once: true
  delegate_to: 127.0.0.1

- name: Fetch information if there is a Cilium pre-flight check deployment leftover
  k8s_info:
    api_version: v1
    kind: Deployment
    name: cilium-pre-flight-check
    namespace: "{{ cilium_namespace }}"
  register: cilium_pre_flight_check_deployment
  run_once: true
  delegate_to: 127.0.0.1

- name: Register if there is a Cilium pre-flight check deployment leftover
  set_fact:
    cilium_pre_flight_check_leftover="{{ cilium_pre_flight_check_deployment | json_query(query) }}"
  vars:
    query: "resources[0].metadata.name"
  run_once: true
  delegate_to: 127.0.0.1

- name: Delete Cilium pre-flight check leftover
  shell:
    set -o errexit
    set -o pipefail
    set -o nounset

    helm delete cilium-preflight
      --namespace {{ cilium_namespace }}

    exit 0
  run_once: true
  delegate_to: 127.0.0.1
  changed_when: false
  when: cilium_pre_flight_check_leftover.find("cilium-pre-flight-check") != -1
  args:
    executable: "/bin/bash"

- name: Give Kubernetes 30 secs to delete Cilium pre-flight check
  wait_for:
    timeout: 30
  when: cilium_pre_flight_check_leftover.find("cilium-pre-flight-check") != -1
  run_once: true
  delegate_to: 127.0.0.1

- name: Install Cilium pre-flight check
  shell:  # noqa 301
    set -o errexit
    set -o pipefail
    set -o nounset

    helm install cilium-preflight {{ cilium_chart_name }} --version {{ cilium_chart_version }}
      --namespace {{ cilium_namespace }}
      --set preflight.enabled=true
      --set agent=false
      --set operator.enabled=false

    exit 0
  run_once: true
  delegate_to: 127.0.0.1
  args:
    executable: "/bin/bash"

- name: Waiting for pre flight check to be deployed
  include_tasks: 'pre_flight_check.yml'

- name: Fetch Cilium pre flight deployment information
  k8s_info:
    api_version: v1
    kind: Deployment
    name: cilium-pre-flight-check
    namespace: "{{ cilium_namespace }}"
  register: cilium_pre_flight_deployment
  run_once: true
  delegate_to: 127.0.0.1

- name: Register Cilium pre flight ready replicas
  set_fact:
    cilium_pre_flight_ready_replicas="{{ cilium_pre_flight_deployment | json_query(query) }}"
  vars:
    query: "resources[0].status.readyReplicas"
  run_once: true
  delegate_to: 127.0.0.1

- name: Register Cilium pre flight replicas
  set_fact:
    cilium_pre_flight_replicas="{{ cilium_pre_flight_deployment | json_query(query) }}"
  vars:
    query: "resources[0].status.replicas"
  run_once: true
  delegate_to: 127.0.0.1

- name: Check replica count == ready replicas
  fail:
    msg: "Replica count ({{ cilium_pre_flight_replicas }}) != ready replicas count ({{ cilium_pre_flight_ready_replicas }})"
  when: cilium_pre_flight_replicas|int != cilium_pre_flight_ready_replicas|int
  run_once: true
  delegate_to: 127.0.0.1

- name: Delete Cilium pre flight via Helm
  shell:
    set -o errexit
    set -o pipefail
    set -o nounset

    helm delete cilium-preflight
      --namespace {{ cilium_namespace }}

    exit 0
  run_once: true
  delegate_to: 127.0.0.1
  changed_when: false
  args:
    executable: "/bin/bash"

- name: Upgrade Cilium via Helm
  block:
    - name: Create temporary file for Helm values
      tempfile:
        state: file
        suffix: cilium_values
      delegate_to: 127.0.0.1
      run_once: true
      register: cilium_values_tmp_file

    - name: Select values file for Helm template
      template:
        src: "{{ lookup('first_found', params) }}"
        dest: "{{ cilium_values_tmp_file.path }}"
      delegate_to: 127.0.0.1
      run_once: true
      vars:
        params:
          files:
            - cilium_values_user.yml.j2
            - cilium_values_default.yml.j2
          paths:
            - templates

    - name: Install Cilium
      shell:
        set -o errexit
        set -o pipefail
        set -o nounset

        helm upgrade {{ cilium_release_name }} {{ cilium_chart_name }}
        --namespace {{ cilium_namespace }}
        --version {{ cilium_chart_version }}
        --values {{ cilium_values_tmp_file.path }}

        exit 0
      run_once: true
      delegate_to: 127.0.0.1
      args:
        executable: "/bin/bash"

    - name: Delete temporary file for Helm values
      file:
        path: "{{ cilium_values_tmp_file.path }}"
        state: absent
      run_once: true
      delegate_to: 127.0.0.1
      when: cilium_values_tmp_file.path is defined

  rescue:
    - name: Delete temporary file for Helm values
      file:
        path: "{{ cilium_values_tmp_file.path }}"
        state: absent
      run_once: true
      delegate_to: 127.0.0.1
      when: cilium_values_tmp_file.path is defined
